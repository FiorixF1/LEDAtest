ARM GAS  /tmp/cc7dAFGK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Delay,"ax",%progbits
  20              		.align	2
  21              		.global	Delay
  22              		.thumb
  23              		.thumb_func
  25              	Delay:
  26              	.LFB140:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usart.h"
  24:Src/main.c    **** #include "gpio.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** #include "api.h"
  29:Src/main.c    **** /* USER CODE END Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cc7dAFGK.s 			page 2


  32:Src/main.c    **** /* USER CODE BEGIN PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** void Delay(__IO uint32_t nCount)
  61:Src/main.c    **** {
  28              		.loc 1 61 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 82B0     		sub	sp, sp, #8
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37 0002 0190     		str	r0, [sp, #4]
  38              	.L2:
  62:Src/main.c    ****     while (nCount--);
  39              		.loc 1 62 0 discriminator 1
  40 0004 019B     		ldr	r3, [sp, #4]
  41 0006 5A1E     		subs	r2, r3, #1
  42 0008 0192     		str	r2, [sp, #4]
  43 000a 002B     		cmp	r3, #0
  44 000c FAD1     		bne	.L2
  63:Src/main.c    **** }
  45              		.loc 1 63 0
  46 000e 02B0     		add	sp, sp, #8
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 0
  49              		@ sp needed
  50 0010 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE140:
ARM GAS  /tmp/cc7dAFGK.s 			page 3


  54 0012 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
  55              		.align	2
  56              		.global	SystemClock_Config
  57              		.thumb
  58              		.thumb_func
  60              	SystemClock_Config:
  61              	.LFB142:
  64:Src/main.c    **** /* USER CODE END 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /**
  67:Src/main.c    ****   * @brief  The application entry point.
  68:Src/main.c    ****   * @retval int
  69:Src/main.c    ****   */
  70:Src/main.c    **** int main(void)
  71:Src/main.c    **** {
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE END 1 */
  75:Src/main.c    ****   
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Src/main.c    ****   HAL_Init();
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE BEGIN Init */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Configure the system clock */
  87:Src/main.c    ****   SystemClock_Config();
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Initialize all configured peripherals */
  94:Src/main.c    ****   MX_GPIO_Init();
  95:Src/main.c    ****   MX_USART2_UART_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    ****   char *test = "I'm alive\n\r";
  98:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t*)test, strlen(test), 0xFFFF);
  99:Src/main.c    ****   
 100:Src/main.c    ****   char msg[22] = "Hello Nucleo Fun!\n\r";
 101:Src/main.c    ****   char *PAIR = "Generating keys...\n\r";
 102:Src/main.c    ****   char *ENC = "Encrypting...\n\r";
 103:Src/main.c    ****   char *ERR_PAIR = "Error in key_pair\n\r";
 104:Src/main.c    ****   char *ERR_ENC = "Error in key_enc\n\r";
 105:Src/main.c    ****   int ans;
 106:Src/main.c    **** 
 107:Src/main.c    ****   unsigned char *pk;
 108:Src/main.c    ****   unsigned char *sk;
 109:Src/main.c    ****   
 110:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t*)PAIR, strlen(msg), 0xFFFF);
 111:Src/main.c    ****   ans = crypto_kem_keypair(pk, sk);
 112:Src/main.c    ****   if (ans == -1) HAL_UART_Transmit(&huart2, (uint8_t*)ERR_PAIR, strlen(msg), 0xFFFF);
 113:Src/main.c    ****   
ARM GAS  /tmp/cc7dAFGK.s 			page 4


 114:Src/main.c    ****   unsigned char ss[9] = "wewewewe";
 115:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t*)ENC, strlen(msg), 0xFFFF);
 116:Src/main.c    ****   ans = crypto_kem_enc(msg, ss, pk);
 117:Src/main.c    ****   if (ans == -1) HAL_UART_Transmit(&huart2, (uint8_t*)ERR_ENC, strlen(msg), 0xFFFF);
 118:Src/main.c    ****   
 119:Src/main.c    ****   /* USER CODE END 2 */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Infinite loop */
 122:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 123:Src/main.c    ****   while (1)
 124:Src/main.c    ****   {
 125:Src/main.c    ****     /* USER CODE END WHILE */
 126:Src/main.c    ****     HAL_GPIO_TogglePin(Ld2_GPIO_Port,Ld2_Pin); //Toggle LED
 127:Src/main.c    ****     HAL_Delay(1000); //Delay 1 Seconds
 128:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 0xFFFF);
 129:Src/main.c    ****     /* USER CODE BEGIN 3 */
 130:Src/main.c    ****   }
 131:Src/main.c    ****   /* USER CODE END 3 */
 132:Src/main.c    **** }
 133:Src/main.c    **** 
 134:Src/main.c    **** /**
 135:Src/main.c    ****   * @brief System Clock Configuration
 136:Src/main.c    ****   * @retval None
 137:Src/main.c    ****   */
 138:Src/main.c    **** void SystemClock_Config(void)
 139:Src/main.c    **** {
  62              		.loc 1 139 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 80
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66 0000 30B5     		push	{r4, r5, lr}
  67              	.LCFI2:
  68              		.cfi_def_cfa_offset 12
  69              		.cfi_offset 4, -12
  70              		.cfi_offset 5, -8
  71              		.cfi_offset 14, -4
  72 0002 95B0     		sub	sp, sp, #84
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 96
 140:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  75              		.loc 1 140 0
  76 0004 0024     		movs	r4, #0
  77 0006 0794     		str	r4, [sp, #28]
  78 0008 0894     		str	r4, [sp, #32]
  79 000a 0994     		str	r4, [sp, #36]
  80 000c 0A94     		str	r4, [sp, #40]
  81 000e 0B94     		str	r4, [sp, #44]
  82 0010 0C94     		str	r4, [sp, #48]
  83 0012 0D94     		str	r4, [sp, #52]
  84 0014 0E94     		str	r4, [sp, #56]
  85 0016 0F94     		str	r4, [sp, #60]
  86 0018 1094     		str	r4, [sp, #64]
  87 001a 1194     		str	r4, [sp, #68]
  88 001c 1294     		str	r4, [sp, #72]
  89 001e 1394     		str	r4, [sp, #76]
 141:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  90              		.loc 1 141 0
ARM GAS  /tmp/cc7dAFGK.s 			page 5


  91 0020 0294     		str	r4, [sp, #8]
  92 0022 0394     		str	r4, [sp, #12]
  93 0024 0494     		str	r4, [sp, #16]
  94 0026 0594     		str	r4, [sp, #20]
  95 0028 0694     		str	r4, [sp, #24]
  96              	.LBB2:
 142:Src/main.c    **** 
 143:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 144:Src/main.c    ****   */
 145:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  97              		.loc 1 145 0
  98 002a 0094     		str	r4, [sp]
  99 002c 1B4B     		ldr	r3, .L6
 100 002e 1A6C     		ldr	r2, [r3, #64]
 101 0030 42F08052 		orr	r2, r2, #268435456
 102 0034 1A64     		str	r2, [r3, #64]
 103 0036 1B6C     		ldr	r3, [r3, #64]
 104 0038 03F08053 		and	r3, r3, #268435456
 105 003c 0093     		str	r3, [sp]
 106 003e 009B     		ldr	r3, [sp]
 107              	.LBE2:
 108              	.LBB3:
 146:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 109              		.loc 1 146 0
 110 0040 0194     		str	r4, [sp, #4]
 111 0042 174A     		ldr	r2, .L6+4
 112 0044 1368     		ldr	r3, [r2]
 113 0046 23F44043 		bic	r3, r3, #49152
 114 004a 43F48043 		orr	r3, r3, #16384
 115 004e 1360     		str	r3, [r2]
 116 0050 1368     		ldr	r3, [r2]
 117 0052 03F44043 		and	r3, r3, #49152
 118 0056 0193     		str	r3, [sp, #4]
 119 0058 019B     		ldr	r3, [sp, #4]
 120              	.LBE3:
 147:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 148:Src/main.c    ****   */
 149:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 121              		.loc 1 149 0
 122 005a 0225     		movs	r5, #2
 123 005c 0795     		str	r5, [sp, #28]
 150:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 124              		.loc 1 150 0
 125 005e 0123     		movs	r3, #1
 126 0060 0A93     		str	r3, [sp, #40]
 151:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 127              		.loc 1 151 0
 128 0062 1023     		movs	r3, #16
 129 0064 0B93     		str	r3, [sp, #44]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130              		.loc 1 152 0
 131 0066 0D95     		str	r5, [sp, #52]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 132              		.loc 1 153 0
 133 0068 0E94     		str	r4, [sp, #56]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 134              		.loc 1 154 0
ARM GAS  /tmp/cc7dAFGK.s 			page 6


 135 006a 0F93     		str	r3, [sp, #60]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 136              		.loc 1 155 0
 137 006c 4FF4A873 		mov	r3, #336
 138 0070 1093     		str	r3, [sp, #64]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 139              		.loc 1 156 0
 140 0072 0423     		movs	r3, #4
 141 0074 1193     		str	r3, [sp, #68]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 142              		.loc 1 157 0
 143 0076 1295     		str	r5, [sp, #72]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 144              		.loc 1 158 0
 145 0078 1395     		str	r5, [sp, #76]
 159:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146              		.loc 1 159 0
 147 007a 07A8     		add	r0, sp, #28
 148 007c FFF7FEFF 		bl	HAL_RCC_OscConfig
 149              	.LVL1:
 160:Src/main.c    ****   {
 161:Src/main.c    ****     Error_Handler();
 162:Src/main.c    ****   }
 163:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 164:Src/main.c    ****   */
 165:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 150              		.loc 1 165 0
 151 0080 0F23     		movs	r3, #15
 152 0082 0293     		str	r3, [sp, #8]
 166:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 167:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 153              		.loc 1 167 0
 154 0084 0395     		str	r5, [sp, #12]
 168:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 155              		.loc 1 168 0
 156 0086 0494     		str	r4, [sp, #16]
 169:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 157              		.loc 1 169 0
 158 0088 4FF48053 		mov	r3, #4096
 159 008c 0593     		str	r3, [sp, #20]
 170:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160              		.loc 1 170 0
 161 008e 0694     		str	r4, [sp, #24]
 171:Src/main.c    **** 
 172:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 162              		.loc 1 172 0
 163 0090 02A8     		add	r0, sp, #8
 164 0092 2946     		mov	r1, r5
 165 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 166              	.LVL2:
 173:Src/main.c    ****   {
 174:Src/main.c    ****     Error_Handler();
 175:Src/main.c    ****   }
 176:Src/main.c    **** }
 167              		.loc 1 176 0
 168 0098 15B0     		add	sp, sp, #84
 169              	.LCFI4:
ARM GAS  /tmp/cc7dAFGK.s 			page 7


 170              		.cfi_def_cfa_offset 12
 171              		@ sp needed
 172 009a 30BD     		pop	{r4, r5, pc}
 173              	.L7:
 174              		.align	2
 175              	.L6:
 176 009c 00380240 		.word	1073887232
 177 00a0 00700040 		.word	1073770496
 178              		.cfi_endproc
 179              	.LFE142:
 181              		.section	.text.main,"ax",%progbits
 182              		.align	2
 183              		.global	main
 184              		.thumb
 185              		.thumb_func
 187              	main:
 188              	.LFB141:
  71:Src/main.c    ****   /* USER CODE BEGIN 1 */
 189              		.loc 1 71 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 40
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 70B5     		push	{r4, r5, r6, lr}
 194              	.LCFI5:
 195              		.cfi_def_cfa_offset 16
 196              		.cfi_offset 4, -16
 197              		.cfi_offset 5, -12
 198              		.cfi_offset 6, -8
 199              		.cfi_offset 14, -4
 200 0002 8AB0     		sub	sp, sp, #40
 201              	.LCFI6:
 202              		.cfi_def_cfa_offset 56
  80:Src/main.c    **** 
 203              		.loc 1 80 0
 204 0004 FFF7FEFF 		bl	HAL_Init
 205              	.LVL3:
  87:Src/main.c    **** 
 206              		.loc 1 87 0
 207 0008 FFF7FEFF 		bl	SystemClock_Config
 208              	.LVL4:
  94:Src/main.c    ****   MX_USART2_UART_Init();
 209              		.loc 1 94 0
 210 000c FFF7FEFF 		bl	MX_GPIO_Init
 211              	.LVL5:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 212              		.loc 1 95 0
 213 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 214              	.LVL6:
  98:Src/main.c    ****   
 215              		.loc 1 98 0
 216 0014 2F4E     		ldr	r6, .L13
 217 0016 3046     		mov	r0, r6
 218 0018 2F49     		ldr	r1, .L13+4
 219 001a 0B22     		movs	r2, #11
 220 001c 4FF6FF73 		movw	r3, #65535
 221 0020 FFF7FEFF 		bl	HAL_UART_Transmit
 222              	.LVL7:
ARM GAS  /tmp/cc7dAFGK.s 			page 8


 100:Src/main.c    ****   char *PAIR = "Generating keys...\n\r";
 223              		.loc 1 100 0
 224 0024 04AC     		add	r4, sp, #16
 225 0026 2D4D     		ldr	r5, .L13+8
 226 0028 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 227 002a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 228 002c 2B68     		ldr	r3, [r5]
 229 002e 2360     		str	r3, [r4]
 230 0030 0023     		movs	r3, #0
 231 0032 ADF82430 		strh	r3, [sp, #36]	@ movhi
 232              	.LVL8:
 110:Src/main.c    ****   ans = crypto_kem_keypair(pk, sk);
 233              		.loc 1 110 0
 234 0036 04A8     		add	r0, sp, #16
 235 0038 FFF7FEFF 		bl	strlen
 236              	.LVL9:
 237 003c 82B2     		uxth	r2, r0
 238 003e 3046     		mov	r0, r6
 239 0040 2749     		ldr	r1, .L13+12
 240 0042 4FF6FF73 		movw	r3, #65535
 241 0046 FFF7FEFF 		bl	HAL_UART_Transmit
 242              	.LVL10:
 111:Src/main.c    ****   if (ans == -1) HAL_UART_Transmit(&huart2, (uint8_t*)ERR_PAIR, strlen(msg), 0xFFFF);
 243              		.loc 1 111 0
 244 004a 0020     		movs	r0, #0
 245 004c 0146     		mov	r1, r0
 246 004e FFF7FEFF 		bl	crypto_kem_keypair
 247              	.LVL11:
 112:Src/main.c    ****   
 248              		.loc 1 112 0
 249 0052 B0F1FF3F 		cmp	r0, #-1
 250 0056 09D1     		bne	.L9
 112:Src/main.c    ****   
 251              		.loc 1 112 0 is_stmt 0 discriminator 1
 252 0058 04A8     		add	r0, sp, #16
 253              	.LVL12:
 254 005a FFF7FEFF 		bl	strlen
 255              	.LVL13:
 256 005e 82B2     		uxth	r2, r0
 257 0060 3046     		mov	r0, r6
 258 0062 2049     		ldr	r1, .L13+16
 259 0064 4FF6FF73 		movw	r3, #65535
 260 0068 FFF7FEFF 		bl	HAL_UART_Transmit
 261              	.LVL14:
 262              	.L9:
 114:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t*)ENC, strlen(msg), 0xFFFF);
 263              		.loc 1 114 0 is_stmt 1
 264 006c 1E4A     		ldr	r2, .L13+20
 265 006e 01AB     		add	r3, sp, #4
 266 0070 07CA     		ldmia	r2, {r0, r1, r2}
 267 0072 03C3     		stmia	r3!, {r0, r1}
 268 0074 1A70     		strb	r2, [r3]
 115:Src/main.c    ****   ans = crypto_kem_enc(msg, ss, pk);
 269              		.loc 1 115 0
 270 0076 04A8     		add	r0, sp, #16
 271 0078 FFF7FEFF 		bl	strlen
 272              	.LVL15:
ARM GAS  /tmp/cc7dAFGK.s 			page 9


 273 007c 82B2     		uxth	r2, r0
 274 007e 1548     		ldr	r0, .L13
 275 0080 1A49     		ldr	r1, .L13+24
 276 0082 4FF6FF73 		movw	r3, #65535
 277 0086 FFF7FEFF 		bl	HAL_UART_Transmit
 278              	.LVL16:
 116:Src/main.c    ****   if (ans == -1) HAL_UART_Transmit(&huart2, (uint8_t*)ERR_ENC, strlen(msg), 0xFFFF);
 279              		.loc 1 116 0
 280 008a 04A8     		add	r0, sp, #16
 281 008c 01A9     		add	r1, sp, #4
 282 008e 0022     		movs	r2, #0
 283 0090 FFF7FEFF 		bl	crypto_kem_enc
 284              	.LVL17:
 117:Src/main.c    ****   
 285              		.loc 1 117 0
 286 0094 B0F1FF3F 		cmp	r0, #-1
 287 0098 09D1     		bne	.L11
 117:Src/main.c    ****   
 288              		.loc 1 117 0 is_stmt 0 discriminator 1
 289 009a 04A8     		add	r0, sp, #16
 290              	.LVL18:
 291 009c FFF7FEFF 		bl	strlen
 292              	.LVL19:
 293 00a0 82B2     		uxth	r2, r0
 294 00a2 0C48     		ldr	r0, .L13
 295 00a4 1249     		ldr	r1, .L13+28
 296 00a6 4FF6FF73 		movw	r3, #65535
 297 00aa FFF7FEFF 		bl	HAL_UART_Transmit
 298              	.LVL20:
 299              	.L11:
 126:Src/main.c    ****     HAL_Delay(1000); //Delay 1 Seconds
 300              		.loc 1 126 0 is_stmt 1 discriminator 1
 301 00ae 1148     		ldr	r0, .L13+32
 302 00b0 2021     		movs	r1, #32
 303 00b2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 304              	.LVL21:
 127:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 0xFFFF);
 305              		.loc 1 127 0 discriminator 1
 306 00b6 4FF47A70 		mov	r0, #1000
 307 00ba FFF7FEFF 		bl	HAL_Delay
 308              	.LVL22:
 128:Src/main.c    ****     /* USER CODE BEGIN 3 */
 309              		.loc 1 128 0 discriminator 1
 310 00be 04A8     		add	r0, sp, #16
 311 00c0 FFF7FEFF 		bl	strlen
 312              	.LVL23:
 313 00c4 82B2     		uxth	r2, r0
 314 00c6 0348     		ldr	r0, .L13
 315 00c8 04A9     		add	r1, sp, #16
 316 00ca 4FF6FF73 		movw	r3, #65535
 317 00ce FFF7FEFF 		bl	HAL_UART_Transmit
 318              	.LVL24:
 130:Src/main.c    ****   /* USER CODE END 3 */
 319              		.loc 1 130 0 discriminator 1
 320 00d2 ECE7     		b	.L11
 321              	.L14:
 322              		.align	2
ARM GAS  /tmp/cc7dAFGK.s 			page 10


 323              	.L13:
 324 00d4 00000000 		.word	huart2
 325 00d8 00000000 		.word	.LC0
 326 00dc 00000000 		.word	.LANCHOR0
 327 00e0 0C000000 		.word	.LC2
 328 00e4 24000000 		.word	.LC3
 329 00e8 5C000000 		.word	.LC4
 330 00ec 38000000 		.word	.LC5
 331 00f0 48000000 		.word	.LC6
 332 00f4 00000240 		.word	1073872896
 333              		.cfi_endproc
 334              	.LFE141:
 336              		.section	.text.Error_Handler,"ax",%progbits
 337              		.align	2
 338              		.global	Error_Handler
 339              		.thumb
 340              		.thumb_func
 342              	Error_Handler:
 343              	.LFB143:
 177:Src/main.c    **** 
 178:Src/main.c    **** /* USER CODE BEGIN 4 */
 179:Src/main.c    **** 
 180:Src/main.c    **** /* USER CODE END 4 */
 181:Src/main.c    **** 
 182:Src/main.c    **** /**
 183:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 184:Src/main.c    ****   * @retval None
 185:Src/main.c    ****   */
 186:Src/main.c    **** void Error_Handler(void)
 187:Src/main.c    **** {
 344              		.loc 1 187 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 7047     		bx	lr
 350              		.cfi_endproc
 351              	.LFE143:
 353 0002 00BF     		.section	.rodata
 354              		.align	2
 355              		.set	.LANCHOR0,. + 0
 356              	.LC1:
 357 0000 48656C6C 		.ascii	"Hello Nucleo Fun!\012\015\000"
 357      6F204E75 
 357      636C656F 
 357      2046756E 
 357      210A0D00 
 358 0014 0000     		.space	2
 359              		.section	.rodata.str1.4,"aMS",%progbits,1
 360              		.align	2
 361              	.LC0:
 362 0000 49276D20 		.ascii	"I'm alive\012\015\000"
 362      616C6976 
 362      650A0D00 
 363              	.LC2:
 364 000c 47656E65 		.ascii	"Generating keys...\012\015\000"
 364      72617469 
ARM GAS  /tmp/cc7dAFGK.s 			page 11


 364      6E67206B 
 364      6579732E 
 364      2E2E0A0D 
 365 0021 000000   		.space	3
 366              	.LC3:
 367 0024 4572726F 		.ascii	"Error in key_pair\012\015\000"
 367      7220696E 
 367      206B6579 
 367      5F706169 
 367      720A0D00 
 368              	.LC5:
 369 0038 456E6372 		.ascii	"Encrypting...\012\015\000"
 369      79707469 
 369      6E672E2E 
 369      2E0A0D00 
 370              	.LC6:
 371 0048 4572726F 		.ascii	"Error in key_enc\012\015\000"
 371      7220696E 
 371      206B6579 
 371      5F656E63 
 371      0A0D00
 372 005b 00       		.space	1
 373              	.LC4:
 374 005c 77657765 		.ascii	"wewewewe\000"
 374      77657765 
 374      00
 375              		.text
 376              	.Letext0:
 377              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 378              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 379              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 380              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 381              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 382              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 383              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 384              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 385              		.file 10 "Inc/qc_ldpc_parameters.h"
 386              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 387              		.file 12 "Inc/usart.h"
 388              		.file 13 "<built-in>"
 389              		.file 14 "Inc/gpio.h"
 390              		.file 15 "Inc/api.h"
 391              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 392              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/cc7dAFGK.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc7dAFGK.s:20     .text.Delay:0000000000000000 $t
     /tmp/cc7dAFGK.s:25     .text.Delay:0000000000000000 Delay
     /tmp/cc7dAFGK.s:55     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc7dAFGK.s:60     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc7dAFGK.s:176    .text.SystemClock_Config:000000000000009c $d
     /tmp/cc7dAFGK.s:182    .text.main:0000000000000000 $t
     /tmp/cc7dAFGK.s:187    .text.main:0000000000000000 main
     /tmp/cc7dAFGK.s:324    .text.main:00000000000000d4 $d
     /tmp/cc7dAFGK.s:337    .text.Error_Handler:0000000000000000 $t
     /tmp/cc7dAFGK.s:342    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc7dAFGK.s:354    .rodata:0000000000000000 $d
     /tmp/cc7dAFGK.s:360    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
HAL_UART_Transmit
strlen
crypto_kem_keypair
crypto_kem_enc
HAL_GPIO_TogglePin
HAL_Delay
huart2
